<template>
	<view class="content">
		<view class="test">
			<uni-list>
				<uni-list-item  title="列表文字" ></uni-list-item>
				<uni-list-item :disabled="true" title="列表禁用状态" ></uni-list-item>
			</uni-list>

		</view>
		<view class="top-box">
			<view class="set-box">
				<view class="set-flex">
					<uni-icons type="calendar" size="30" color="#fff"></uni-icons>
					<view class="txt">签到</view>
				</view>
				<view class="set-flex">
					<uni-icons type="gear" size="30" color="#fff"></uni-icons>
					<uni-icons type="chat" size="30" color="#fff"></uni-icons>
				</view>
			</view>
			<view class="user">
				<!-- 条件渲染 -->
				<view class="u-top" @click="setFunc">
					<template v-if="!userInfo.nickName">
						<image src="/static/tt.jpg"></image>
						<view class="tit">注册 / 登录</view>
					</template>

					<template v-else>
						<image :src="userInfo.avatarUrl"></image>
						<view class="tit">{{userInfo.nickName}}</view>
					</template>
				</view>
				<view class="u-bottom">
					<view class="u-item">
						<view class="num">12</view>
						<view class="u-tit">点赞</view>
					</view>
					<view class="u-item">
						<view class="num">12</view>
						<view class="u-tit">喜欢</view>
					</view>
					<view class="u-item">
						<view class="num">12</view>
						<view class="u-tit">浏览</view>
					</view>
					<view class="u-item">
						<view class="num">12</view>
						<view class="u-tit">收藏</view>
					</view>
				</view>
			</view>
		</view>


		<view class="listBox">
			<uni-list>
			 	<uni-list-item :show-extra-icon="true" :extra-icon="extraIcon1" showArrow title="个人信息" clickable></uni-list-item>
			 	<uni-list-item :show-extra-icon="true" :extra-icon="extraIcon2" showArrow title="我的购物车" clickable></uni-list-item>
			 	<uni-list-item :show-extra-icon="true" :extra-icon="extraIcon3" showArrow title="用户反馈" clickable></uni-list-item>
			 	<uni-list-item :show-extra-icon="true" :extra-icon="extraIcon4" showArrow title="我的邮件" clickable></uni-list-item>
			 	<uni-list-item :show-extra-icon="true" :extra-icon="extraIcon5" showArrow title="分享有礼" clickable></uni-list-item>
			</uni-list>

		</view>		
	</view>
</template>

<script setup>
	import { getUserInfo, login } from '../../api/api'

	const userInfo = reactive({
		nickName: '',
		avatarUrl: '',
	})
	const extraIcon1 = reactive({
		color: '#666',
		size: '22',
		type: 'auth'
	})
	const extraIcon2 = reactive({
		color: '#666',
		size: '22',
		type: 'cart'
	})
	const extraIcon3 = reactive({
		color: '#666',
		size: '22',
		type: 'chatboxes'
	})
	const extraIcon4 = reactive({
		color: '#666',
		size: '22',
		type: 'email'
	})
	const extraIcon5 = reactive({
		color: '#666',
		size: '22',
		type: 'gift'
	})
	
	// 用户授权
	const setFunc = () => {
		// 确认弹窗
		uni.showModal({
			title: '温馨提示',
			content: '亲， 授权微信登录后才能正常使用小程序',
			success(res) {
				if(res.confirm) {
					uni.login({
						success: async (data) => {
							console.log(data)
							const {token} = await login(data.code) as UTSJSONObject
							
							console.log(token, 'token')
							// 缓存token
							uni.setStorageSync('token', token)
							const {avatarUrl, nickName} = await getUserInfo() as UTSJSONObject
							userInfo.avatarUrl = avatarUrl
							userInfo.nickName = nickName
						}
					})
				}
			}
			
		})
	}
</script>

<style lang="scss" scoped>
	.content {
		height: 100vh;
		background-color: #f5f5f5;

		.top-box {
			width: 100%;
			height: 500rpx;
			overflow: hidden;
			padding: 40rpx 20rpx 40rpx;
			box-sizing: border-box;
			position: relative;
			z-index: 1;
		}

		.top-box::after {
			content: '';
			width: 140%;
			height: 500rpx;
			position: absolute;
			top: 0;
			left: -20%;
			background-color: #00aaff;
			border-radius: 0 0 50% 50%;
			z-index: -1;
		}

		.set-box {
			display: flex;
			flex-direction: row;
			justify-content: space-between;
			align-items: center;

			.set-flex {
				width: 18%;
				display: flex;
				flex-direction: row;
				justify-content: space-between;
				align-items: center;

				.txt {
					color: #fff;
					font-size: 30rpx;
				}
			}
		}

		.user {
			margin-top: 35rpx;
			padding: 30rpx;
			box-sizing: border-box;
			height: 280rpx;
			background-color: #fff;
			box-shadow: 1px 10rpx 20rpx #ececec;
			border-radius: 16rpx;

			.u-top {
				display: flex;
				flex-direction: row;
				justify-content: flex-start;
				align-items: center;
				margin-bottom: 30rpx;

				image {
					width: 100rpx;
					height: 100rpx;
					border-radius: 50%;
					margin-right: 20rpx;
				}

				.tit {
					font-size: 30rpx;
					font-weight: 700;
					color: #333;
				}
			}

			.u-bottom {
				display: flex;
				flex-direction: row;
				justify-content: space-around;
				align-items: center;
				.u-item {
					text-align: center;

					.u-tit {
						color: #757575;
						font-size: 26rpx;
						margin-top: 10rpx;
					}

					.num {
						color: #000;
						font-size: 33rpx;
						font-weight: 700;
					}
				}
			}
		}
		
		.listBox {
			padding: 20rpx;
			box-sizing: border-box;
			border-radius: 12rpx;
		}
	}
</style>